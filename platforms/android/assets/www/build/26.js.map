{"version":3,"sources":["../../src/pages/autocomplete/autocomplete.module.ts","../../src/pages/autocomplete/autocomplete.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACE;AAUlD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QARlC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uEAAgB,CAAC;aAC3C;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;ACZO;AAC+B;AASzE;IAOE,0BAAmB,OAAsB,EAAS,SAAoB,EAAQ,QAAwB;QAAnF,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAQ,aAAQ,GAAR,QAAQ,CAAgB;QAJvG,gBAAW,GAAM,KAAK,CAAC;QAEvB,YAAO,GAAE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAGpD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG;YACpB,KAAK,EAAE,EAAE;SACR;IACD,CAAC;IAED,yCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IACD,uCAAY,GAAZ;QACI,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,MAAM,CAAC;QACX,CAAC;QACD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG;YACX,wGAAwG;YACtG,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC9B,qBAAqB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SAC3C;QACD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE,UAAU,WAAW,EAAE,MAAM;YAClE,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,MAAM,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,WAAW,CAAC,OAAO,CAAC,UAAU,UAAU;gBACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACT,CAAC;IACD,qCAAU,GAAV,UAAW,IAAS;QAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IACD,kCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IA1CU,gBAAgB;QAJ5B,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;yBAQsG;OAP3F,gBAAgB,CA6C5B;IAAD,CAAC;AAAA;SA7CY,gBAAgB,e","file":"26.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AutocompletePage } from './autocomplete';\n\n@NgModule({\n  declarations: [\n    AutocompletePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AutocompletePage),\n  ],\n})\nexport class AutocompletePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autocomplete/autocomplete.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams,ViewController } from 'ionic-angular';\ndeclare var google:any;\n\n\n@IonicPage()\n@Component({\n  selector: 'page-autocomplete',\n  templateUrl: 'autocomplete.html',\n})\nexport class AutocompletePage {\n\tautocompleteItems;\n\tautocomplete;\n\tbackPressed:any =false;\n\tloader:any;\n\tservice= new google.maps.places.AutocompleteService();\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public viewCtrl: ViewController) {\n  \tthis.autocompleteItems = [];\n\t\tthis.autocomplete = {\n\t\tquery: ''\n\t\t}\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AutocompletePage');\n  }\n  updateSearch() {\n      console.log('modal > updateSearch');\n        if (this.autocomplete.query == '') {\n            this.autocompleteItems = [];\n            return;\n        }\n        let self = this;\n        let config = { \n          /*  types:  ['geocode'], // other types available in the API: 'establishment', 'regions', and 'cities'*/\n            input: this.autocomplete.query, \n            componentRestrictions: { country: 'MX' } \n        }\n        this.service.getPlacePredictions(config, function (predictions, status) {\n            console.log('modal > getPlacePredictions > status > ', status);\n            self.autocompleteItems = [];\n            predictions.forEach(function (prediction) {\n               self.autocompleteItems.push(prediction);\n            });\n        });\n  }\n  chooseItem(item: any) {\n    this.viewCtrl.dismiss(item);\n  }\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autocomplete/autocomplete.ts"],"sourceRoot":""}